// <auto-generated />
using System;
using AssetDeclarationsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetDeclarationsApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250323134258_RemovedIncomeSubject")]
    partial class RemovedIncomeSubject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetDeclarationsApi.Entities.AssetDeclaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("AssetDeclarations");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.BusinessActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("BusinessActivities");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.CashPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<double>("BaseValue")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CurrencyValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("CashPositions");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId")
                        .IsUnique();

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("YearlyValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Liability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("Liabilities");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parties");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.PersonalProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("PersonalProperties");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.RealEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("RealEstate");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Receivable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("Receivables");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.SecurityPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssetDeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AssetDeclarationId");

                    b.ToTable("SecurityPositions");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.AssetDeclaration", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.Person", null)
                        .WithMany("AssetDeclarations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.BusinessActivity", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("BusinessActivities")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.CashPosition", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("CashPositions")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Document", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithOne("Document")
                        .HasForeignKey("AssetDeclarationsApi.Entities.Document", "AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Income", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("Incomes")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Liability", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("Liabilities")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Person", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.Party", "Party")
                        .WithMany("Persons")
                        .HasForeignKey("PartyId");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.PersonalProperty", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("PersonalProperties")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.RealEstate", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("RealEstate")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Receivable", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("Receivables")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.SecurityPosition", b =>
                {
                    b.HasOne("AssetDeclarationsApi.Entities.AssetDeclaration", null)
                        .WithMany("SecurityPositions")
                        .HasForeignKey("AssetDeclarationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.AssetDeclaration", b =>
                {
                    b.Navigation("BusinessActivities");

                    b.Navigation("CashPositions");

                    b.Navigation("Document")
                        .IsRequired();

                    b.Navigation("Incomes");

                    b.Navigation("Liabilities");

                    b.Navigation("PersonalProperties");

                    b.Navigation("RealEstate");

                    b.Navigation("Receivables");

                    b.Navigation("SecurityPositions");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Party", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("AssetDeclarationsApi.Entities.Person", b =>
                {
                    b.Navigation("AssetDeclarations");
                });
#pragma warning restore 612, 618
        }
    }
}
